<?php

#TODO: OOP

define("PHPRCDIR", dirname(__FILE__));

if ( PHP_SAPI !== "cli" ) {
	echo "Must be run in cli" . PHP_EOL;
	exit(1);
}

if ( !is_dir($scriptDir=(PHPRCDIR . "/scripts")) ){
	echo $scriptDir . " is not a dir" . PHP_EOL;
	exit(1);	
}


/**
* Creates an sh function from a php file path
* TODO: nested from path
* TODO: path as function name
*/
function createPhpShFunction(string $path){
	$functionName=pathinfo($path)["filename"];
	# use filename as function name, pass arguments
	$function = <<<FUNC

# FUNCTION GENERATED BY PHPRC
$functionName () {
    php $path $@;
}


FUNC;

return $function;
}



/**
* Checks if the the supplied path is a file of type $ofExtension
*/
function isFile(string $file, string $ofExtension):bool{
	return is_file($file) && pathinfo($file)["extension"] === $ofExtension; 
}

function isChildDir(string $path):bool{
#    echo 
    return is_dir($path) && $path !== "." && $path !== "..";
}

function createFunctions(string $inDir, string &$functions=""){
    $contents=scandir($inDir, SCANDIR_SORT_DESCENDING);
    foreach ( $contents as $fileName ) {
	$fullPath = realpath($inDir . "/" . $fileName);
        if ( isFile($fullPath, "php") ) {
            echo "Writing function from path " . $fullPath . PHP_EOL;
	    $functions .= createPhpShFunction($fullPath);
   	} else if ( $fileName !== "." && $fileName !==".." && is_dir($fullPath) ) {
            echo "there is a dir at " . $fileName. PHP_EOL;
	    createFunctions($fullPath, $functions);
	}
    }
    return $functions;
}

$func = createFunctions($scriptDir);
var_dump($func);die;

$phprcFile = fopen($phprcFilePath=($_SERVER["HOME"] . "/.phprc"), "w+");
$written = fwrite($phprcFile, $functions);

echo "Wrote: " . $written . " bytes??" . PHP_EOL;
echo "To:  : " . $phprcFilePath . PHP_EOL;

echo "===" . PHP_EOL;
echo "Sourcing " . $phprcFilePath . PHP_EOL;
exec("source " . $phprcFilePath); 
